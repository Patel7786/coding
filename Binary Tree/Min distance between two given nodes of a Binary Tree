//Min distance between two given nodes of a Binary Tree
/*
Approach : first find the Least common parent of both node 
then fron that find the distance of both node and add then send it.
*/

class GfG {
    int dist(Node root,int v,int count)
    {
        if(root==null) return 0;
        if(root.data==v) return count;
        int left=dist(root.left,v,count+1);
        int right=dist(root.right,v,count+1);
        return left+right;
    }
    Node findLCA(Node root,int a,int b)
    {
        if(root==null) return null;
        if(root.data==a || root.data==b) return root;
        Node left=findLCA(root.left,a,b);
        Node right=findLCA(root.right,a,b);
        if(left!=null && right !=null) return root;
        if(left!=null) return left;
        if(right!=null) return right;
        return null;
    }
    int findDist(Node root, int a, int b) {
        // Your code here
        Node r=findLCA(root,a,b);
        int v1=dist(r,a,0);
        int v2=dist(r,b,0);
        return v1+v2;
    }
}