/*
Approach:
1. add both heap in a single array.
2.use build heap .
3.use heapify in build heap for(int i=n/2;i>=0;i--) heapify(arr,n,i). where n is sizeof(firstheap + second heap).
*/
class Solution{
    public void swap(int arr[],int i,int j)
    {
        arr[i]+=arr[j];
        arr[j]=arr[i]-arr[j];
        arr[i]=arr[i]-arr[j];
    }
    public void heapify(int arr[],int n,int i)
    {
        int largest=i;
        int left=2*i+1;
        int right=2*i+2;
        if(left<n && arr[largest]<arr[left])
        {
            largest=left;
        }
        if(right<n && arr[largest]<arr[right])
        {
            largest=right;
        }
        if(largest!=i)
        {
            swap(arr,i,largest);
            heapify(arr,n,largest);
        }
    }
    public int[] mergeHeaps(int[] a, int[] b, int n, int m) {
        // your code here
        int arr[]=new int[n+m];
        for(int i=0;i<n;i++)
        {
            arr[i]=a[i];
        }
        int size=n;
        for(int i=0;i<m;i++)
        {
            arr[n+i]=b[i];
        }
       for(int i=(n+m)/2-1;i>=0;i--)
       {
           heapify(arr,n+m,i);
       }
       return arr;
    }
}