//Coin Exchange
//Approach :
/*
 * if include any element then N same and sum-coin[N]
 * if not include element then N-1 and sum same
 */
class Solution {
    public long ways(int coins[],int n,int sum,long dp[][])
    {
        if(sum==0) return 1;
        if(sum<0) return 0;
        if(dp[sum][n]!=-1) return dp[sum][n];
        long w=0;
        w+= ways(coins,n,sum-coins[n],dp)+ways(coins,n-1,sum,dp);
        dp[sum][n]=w;
        return dp[sum][n];
    }
    public long count(int coins[], int N, int sum) {
        // code here.
        long dp[][]=new long[sum+1][N];
        for(long []row: dp)
            Arrays.fill(row,-1);
        return ways(coins,N-1,sum,dp);
    }
}