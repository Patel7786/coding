
//Approach 
/*
 * first set a previous which is store the prevoius node of each root in InorderTraversal
 * then prev!=null then prev.next=root (root is current node is successor )
 */


class Node {
    int data;
    Node left, right,next;
    
    public Node(int data){
        this.data = data;
    }
}

class Solution{
    public static Node prev=null;
    public void populateNext(Node root){
        //code here
        if(root==null) return;

        
        populateNext(root.left);
        if(prev!=null)
            prev.next=root;
        prev=root;
        populateNext(root.right);
    }
}